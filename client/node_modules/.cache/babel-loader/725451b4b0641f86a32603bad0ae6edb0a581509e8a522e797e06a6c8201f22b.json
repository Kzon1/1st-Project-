{"ast":null,"code":"import { createSlice, createAsyncThunk, createAction } from '@reduxjs/toolkit';\nimport categorySevice from './categorySevice';\n\n// POST \nexport const addCategory = createAsyncThunk('category/add-category', async (data, thunkAPI) => {\n  try {\n    return await categorySevice.addCategory(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\n// PUT \nexport const updateCategory = createAsyncThunk('category/update-category', async (data, thunkAPI) => {\n  try {\n    return await categorySevice.updateCategory(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\n// GET\nexport const getAllCategory = createAsyncThunk('category/get-all-category', async thunkAPI => {\n  try {\n    return await categorySevice.getAllCategory();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const getCategory = createAsyncThunk('category/get-category', async (id, thunkAPI) => {\n  try {\n    return await categorySevice.getCategory(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\n// DELETE\nexport const deleteCategory = createAsyncThunk('category/delete-category', async (id, thunkAPI) => {\n  try {\n    return await categorySevice.deleteCategory(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\n//  RESET\nexport const resetState = createAction(\"Reset_all\");\nconst initialState = {\n  categories: [],\n  getCategory: {},\n  AllCate: \"\",\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const categorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // POST\n    builder.addCase(addCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(addCategory.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"add category successfully\";\n    }).addCase(addCategory.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n\n    // PUT\n    builder.addCase(updateCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateCategory.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"update category successfully\";\n    }).addCase(updateCategory.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n\n    // GET\n    builder.addCase(getAllCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(getAllCategory.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.AllCate = action.payload;\n      state.message = \"Get all category successfully\";\n    }).addCase(getAllCategory.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.AllCate = null;\n      state.message = action.error;\n    });\n    builder.addCase(getCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(getCategory.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.getCategory = action.payload;\n      state.message = \"Get category successfully\";\n    }).addCase(getCategory.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.getCategory = null;\n      state.message = action.error;\n    });\n\n    // DELETE\n    // POST\n    builder.addCase(deleteCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteCategory.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"delete category successfully\";\n    }).addCase(deleteCategory.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n  }\n});\nexport default categorySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","categorySevice","addCategory","data","thunkAPI","error","rejectWithValue","updateCategory","getAllCategory","getCategory","id","deleteCategory","resetState","initialState","categories","AllCate","isError","isLoading","isSuccess","message","categorySlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","rejected","payload","reducer"],"sources":["C:/Users/Asus/Desktop/1st-Project-/client/src/redux/category/categorySlice.js"],"sourcesContent":["import { createSlice ,createAsyncThunk, createAction} from '@reduxjs/toolkit'\r\nimport categorySevice from './categorySevice'\r\n\r\n\r\n// POST \r\nexport const addCategory = createAsyncThunk('category/add-category',async(data,thunkAPI)=>{\r\n    try {\r\n        return await categorySevice.addCategory(data)\r\n    } catch (error) {\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n\r\n// PUT \r\nexport const updateCategory = createAsyncThunk('category/update-category',async(data,thunkAPI)=>{\r\n    try {\r\n        return await categorySevice.updateCategory(data)\r\n    } catch (error) {\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n// GET\r\nexport const getAllCategory = createAsyncThunk('category/get-all-category',async(thunkAPI)=>{\r\n    try {\r\n        return await categorySevice.getAllCategory()\r\n    } catch (error) {\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\nexport const getCategory = createAsyncThunk('category/get-category',async(id,thunkAPI)=>{\r\n    try {\r\n        return await categorySevice.getCategory(id)\r\n    } catch (error) {\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n// DELETE\r\nexport const deleteCategory = createAsyncThunk('category/delete-category',async(id,thunkAPI)=>{\r\n    try {\r\n        return await categorySevice.deleteCategory(id)\r\n    } catch (error) {\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n//  RESET\r\nexport const resetState = createAction(\"Reset_all\");\r\n\r\n\r\nconst initialState = {\r\n    categories:[],\r\n    getCategory:{},\r\n    AllCate:\"\",\r\n    isError : false,\r\n    isLoading:false,\r\n    isSuccess:false,\r\n    message:\"\"\r\n}\r\n\r\n\r\nexport const categorySlice = createSlice({\r\n    name:\"category\",\r\n    initialState,\r\n    reducers:{},\r\n    extraReducers:(builder)=>{\r\n\r\n        // POST\r\n        builder.addCase(addCategory.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(addCategory.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"add category successfully\"\r\n        })\r\n        .addCase(addCategory.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n        })\r\n\r\n\r\n        // PUT\r\n        builder.addCase(updateCategory.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(updateCategory.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"update category successfully\"\r\n        })\r\n        .addCase(updateCategory.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n        })\r\n\r\n\r\n        // GET\r\n        builder.addCase(getAllCategory.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(getAllCategory.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.AllCate = action.payload\r\n            state.message = \"Get all category successfully\"\r\n        })\r\n        .addCase(getAllCategory.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.AllCate = null\r\n            state.message = action.error\r\n        })\r\n\r\n        builder.addCase(getCategory.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(getCategory.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.getCategory = action.payload\r\n            state.message = \"Get category successfully\"\r\n        })\r\n        .addCase(getCategory.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.getCategory = null\r\n            state.message = action.error\r\n        })\r\n    \r\n    \r\n        // DELETE\r\n        // POST\r\n        builder.addCase(deleteCategory.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(deleteCategory.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"delete category successfully\"\r\n        })\r\n        .addCase(deleteCategory.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n        })\r\n    }\r\n})\r\nexport default categorySlice.reducer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}