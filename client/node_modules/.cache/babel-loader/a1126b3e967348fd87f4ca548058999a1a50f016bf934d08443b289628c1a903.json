{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\E_Car\\\\client\\\\src\\\\pages\\\\AddCategory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport AdminMenu from '../components/AdminMenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from \"react-toastify\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport CustomInput from '../components/CustomInput';\nimport { getCategory, addCategory, updateCategory } from '../redux/category/categorySlice';\nimport { resetState } from '../redux/user/userSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet schema = yup.object().shape({\n  name: yup.string().required(\"name is Required\")\n});\nexport default function AddCategory() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const getCategory = useSelector(state => {\n    var _state$category, _state$category$auser;\n    return state === null || state === void 0 ? void 0 : (_state$category = state.category) === null || _state$category === void 0 ? void 0 : (_state$category$auser = _state$category.auser) === null || _state$category$auser === void 0 ? void 0 : _state$category$auser.getUser;\n  });\n  const {\n    id\n  } = useParams();\n  console.log(getCategory);\n  useEffect(() => {\n    if (id !== undefined) {\n      dispatch(getCategory(id));\n    } else {\n      dispatch(resetState());\n    }\n  }, [id]);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      title: (getCategory === null || getCategory === void 0 ? void 0 : getCategory.title) || \"\"\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      if (id !== undefined) {\n        const data = {\n          _id: id,\n          data: values\n        };\n        dispatch(updateCategory(data));\n        toast.success(\"User Updated Successfullly!\");\n        navigate('/dashboard/admin/list-users');\n        window.location.reload();\n      } else {\n        dispatch(addCategory(values));\n        formik.resetForm();\n        setTimeout(() => {\n          navigate('/dashboard/admin/list-users');\n        }, 500);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-3\",\n      style: {\n        minHeight: \"90vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: /*#__PURE__*/_jsxDEV(AdminMenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-9\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-4 title\",\n            children: [id !== undefined ? \"Update\" : \"Add\", \" Category\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              onSubmit: formik.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n                type: \"text\",\n                placeholder: \"Enter title\",\n                onChange: formik.handleChange(\"title\"),\n                onBlur: formik.handleBlur(\"title\"),\n                values: formik.values.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: formik.touched.title && formik.errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success border-0 rounded-3 my-5\",\n                children: [id !== undefined ? \"Update\" : \"Add\", \" Category\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(AddCategory, \"JxliP/oEWSvb5657vJy5oV19tv0=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useParams, useFormik];\n});\n_c = AddCategory;\nvar _c;\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","AdminMenu","useDispatch","useSelector","toast","yup","useFormik","CustomInput","getCategory","addCategory","updateCategory","resetState","jsxDEV","_jsxDEV","Fragment","_Fragment","schema","object","shape","name","string","required","AddCategory","_s","dispatch","navigate","state","_state$category","_state$category$auser","category","auser","getUser","id","console","log","undefined","formik","enableReinitialize","initialValues","title","validationSchema","onSubmit","values","data","_id","success","window","location","reload","resetForm","setTimeout","children","className","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","action","handleSubmit","type","placeholder","onChange","handleChange","onBlur","handleBlur","touched","errors","_c","$RefreshReg$"],"sources":["D:/Projects/E_Car/client/src/pages/AddCategory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigate ,useParams} from 'react-router-dom';\r\nimport AdminMenu from '../components/AdminMenu';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { toast } from \"react-toastify\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport CustomInput from '../components/CustomInput';\r\nimport {getCategory,addCategory, updateCategory } from '../redux/category/categorySlice';\r\nimport { resetState } from '../redux/user/userSlice';\r\n\r\nlet schema = yup.object().shape({\r\n    name: yup.string().required(\"name is Required\"),\r\n});\r\nexport default function AddCategory() {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const getCategory = useSelector((state) => state?.category?.auser?.getUser);\r\n    \r\n    const {id}= useParams()\r\n    console.log(getCategory)\r\n    useEffect(() => {\r\n      if (id !== undefined) {\r\n        dispatch(getCategory(id));\r\n      } else {\r\n        dispatch(resetState());\r\n      }\r\n    }, [id]);\r\n    const formik = useFormik({\r\n    enableReinitialize:true,\r\n    initialValues: {\r\n        title: getCategory?.title || \"\",\r\n    },\r\n    validationSchema: schema,\r\n    onSubmit: (values) => {\r\n        if(id !== undefined){\r\n            const data = {_id : id,data : values}\r\n            dispatch(updateCategory(data))\r\n            toast.success(\"User Updated Successfullly!\");\r\n            navigate('/dashboard/admin/list-users')\r\n            window.location.reload()\r\n        }else{\r\n            dispatch(addCategory(values));\r\n            formik.resetForm();\r\n            setTimeout(() => {\r\n            navigate('/dashboard/admin/list-users')\r\n            }, 500);\r\n        }\r\n        },\r\n    });\r\n    return (\r\n    <>\r\n        <div className='container-fluid p-3' style={{minHeight:\"90vh\"}}>\r\n            <div className='row'>\r\n                <div className='col-md-3'>\r\n                    <AdminMenu/>\r\n                </div>\r\n                <div className='col-md-9'>\r\n                    <h3 className='mb-4 title'>{id !== undefined ? \"Update\":\"Add\"} Category</h3>\r\n                    <div className=\"\">\r\n                        <form action=\"\" onSubmit={formik.handleSubmit}>\r\n                            <CustomInput \r\n                                type =\"text\" \r\n                                placeholder =\"Enter title\"\r\n                                onChange={formik.handleChange(\"title\")}\r\n                                onBlur={formik.handleBlur(\"title\")}\r\n                                values={formik.values.title}\r\n                                />\r\n                            <div className=\"error\">\r\n                                {formik.touched.title && formik.errors.title}\r\n                            </div>\r\n                            <button type='submit' className='btn btn-success border-0 rounded-3 my-5'>\r\n                                {id !== undefined ? \"Update\":\"Add\"} Category\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}