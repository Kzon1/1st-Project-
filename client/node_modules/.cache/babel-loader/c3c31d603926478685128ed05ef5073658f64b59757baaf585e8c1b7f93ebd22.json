{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\E_Car\\\\client\\\\src\\\\components\\\\SearchInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProducts, searchPro } from \"../redux/products/productSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchInput = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [toggle, setToggle] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const products = useSelector(state => {\n    var _state$product;\n    return state === null || state === void 0 ? void 0 : (_state$product = state.product) === null || _state$product === void 0 ? void 0 : _state$product.products;\n  });\n  useEffect(() => {\n    dispatch(getProducts());\n  }, []);\n  const handleInputChange = event => {\n    setToggle(true);\n    setSearchQuery(event.target.value);\n  };\n  const filteredProducts = products === null || products === void 0 ? void 0 : products.filter(product => product === null || product === void 0 ? void 0 : product.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex search-form\",\n      role: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control me-2\",\n        type: \"search\",\n        placeholder: \"Search\",\n        \"aria-label\": \"Search\",\n        value: searchQuery,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success\",\n        type: \"button\" // Change type to button\n        ,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-absolute bg-white\",\n      style: {\n        top: 50\n      },\n      children: toggle && filteredProducts && (filteredProducts === null || filteredProducts === void 0 ? void 0 : filteredProducts.map((e, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"12px\"\n        },\n        className: \"p-2\",\n        children: e === null || e === void 0 ? void 0 : e.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchInput, \"lrhMpTNF7gZjwCszPshSYsAQHHU=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = SearchInput;\nexport default SearchInput;\nvar _c;\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","useDispatch","useSelector","getProducts","searchPro","jsxDEV","_jsxDEV","SearchInput","_s","searchQuery","setSearchQuery","toggle","setToggle","navigate","dispatch","products","state","_state$product","product","handleInputChange","event","target","value","filteredProducts","filter","title","toLowerCase","includes","className","children","role","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","top","map","e","index","fontSize","_c","$RefreshReg$"],"sources":["D:/Projects/E_Car/client/src/components/SearchInput.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProducts, searchPro } from \"../redux/products/productSlice\";\r\n\r\nconst SearchInput = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [toggle,setToggle] = useState(false)\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(state => state?.product?.products);\r\n\r\n  useEffect(() => {\r\n      dispatch(getProducts());\r\n  }, []);\r\n\r\n  const handleInputChange = (event) => {\r\n      setToggle(true)\r\n      setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const filteredProducts = products?.filter(product =>\r\n      product?.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n\r\n  return (\r\n    <div className=\"position-relative\">\r\n      <form\r\n        className=\"d-flex search-form\"\r\n        role=\"search\"\r\n      >\r\n        <input\r\n          className=\"form-control me-2\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          value={searchQuery}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button\r\n          className=\"btn btn-outline-success\"\r\n          type=\"button\" // Change type to button\r\n        >\r\n          Search\r\n        </button>\r\n      </form>\r\n      <div className=\"position-absolute bg-white\" style={{top:50}}>\r\n        {\r\n          toggle && filteredProducts && filteredProducts?.map((e,index)=>(\r\n            <p style={{fontSize:\"12px\"}} className=\"p-2\" key={index}>{e?.title}</p>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}