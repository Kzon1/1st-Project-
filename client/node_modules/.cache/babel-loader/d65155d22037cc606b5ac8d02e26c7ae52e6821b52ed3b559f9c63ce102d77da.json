{"ast":null,"code":"import { createSlice, createAsyncThunk, createAction } from '@reduxjs/toolkit';\nimport productSevice from './productSevice';\n\n// POST\nexport const addProduct = createAsyncThunk('product/add-product', async (data, thunkAPI) => {\n  try {\n    return await productSevice.addProducts(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\n// PUT\nexport const updateProduct = createAsyncThunk('product/update-product', async (data, thunkAPI) => {\n  try {\n    return await productSevice.updateProduct(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\n// GET\nexport const getProducts = createAsyncThunk('product/get-all-product', async thunkAPI => {\n  try {\n    return await productSevice.getProducts();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const getSingleProduct = createAsyncThunk('product/get-product', async (id, thunkAPI) => {\n  try {\n    return await productSevice.getSingleProduct(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\n\n// DELETE\nexport const deleteProducts = createAsyncThunk('product/delete-product', async (id, thunkAPI) => {\n  try {\n    return await productSevice.deleteProduct(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const resetState = createAction(\"Reset_all\");\nconst initialState = {\n  products: [],\n  getproduct: {},\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // POST\n    builder.addCase(addProduct.pending, state => {\n      state.isLoading = true;\n    }).addCase(addProduct.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"add products successfully\";\n    }).addCase(addProduct.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n\n    // PUT\n    builder.addCase(updateProduct.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateProduct.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"update products successfully\";\n    }).addCase(updateProduct.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n\n    // GET\n    builder.addCase(getProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(getProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"Get all products successfully\";\n      state.products = action.payload;\n    }).addCase(getProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n      state.products = null;\n    });\n    builder.addCase(getSingleProduct.pending, state => {\n      state.isLoading = true;\n    }).addCase(getSingleProduct.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"Get product successfully\";\n      state.getproduct = action.payload;\n    }).addCase(getSingleProduct.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n      state.getproduct = null;\n    });\n\n    // DELETE\n    builder.addCase(deleteProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"delete products successfully\";\n    }).addCase(deleteProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(resetState, () => initialState);\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","productSevice","addProduct","data","thunkAPI","addProducts","error","rejectWithValue","updateProduct","getProducts","getSingleProduct","id","deleteProducts","deleteProduct","resetState","initialState","products","getproduct","isError","isLoading","isSuccess","message","productSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","rejected","payload","reducer"],"sources":["D:/Projects/E_Car/client/src/redux/products/productSlice.js"],"sourcesContent":["import { createSlice ,createAsyncThunk, createAction} from '@reduxjs/toolkit'\r\nimport productSevice from './productSevice'\r\n\r\n\r\n// POST\r\nexport const addProduct = createAsyncThunk('product/add-product',async(data,thunkAPI)=>{\r\n    try {\r\n        return await productSevice.addProducts(data) \r\n    } catch (error) {   \r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n\r\n// PUT\r\nexport const updateProduct = createAsyncThunk('product/update-product',async(data,thunkAPI)=>{\r\n    try {\r\n        return await productSevice.updateProduct(data) \r\n    } catch (error) {   \r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n// GET\r\nexport const getProducts = createAsyncThunk('product/get-all-product',async(thunkAPI)=>{\r\n    try {\r\n        return await productSevice.getProducts() \r\n    } catch (error) {   \r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\nexport const getSingleProduct = createAsyncThunk('product/get-product',async(id,thunkAPI)=>{\r\n    try {\r\n        return await productSevice.getSingleProduct(id) \r\n    } catch (error) {   \r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n\r\n// DELETE\r\nexport const deleteProducts = createAsyncThunk('product/delete-product',async(id,thunkAPI)=>{\r\n    try {\r\n        return await productSevice.deleteProduct(id) \r\n    } catch (error) {   \r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n\r\nexport const resetState = createAction(\"Reset_all\");\r\n\r\n\r\nconst initialState = {\r\n    products :[],\r\n    getproduct:{},\r\n    isError : false,\r\n    isLoading:false,\r\n    isSuccess:false,\r\n    message:\"\"\r\n}\r\n\r\nexport const productSlice = createSlice({\r\n    name : \"product\",\r\n    initialState,\r\n    reducers:{},\r\n    extraReducers:(builder)=> {\r\n        // POST\r\n        builder.addCase(addProduct.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(addProduct.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"add products successfully\"\r\n        })\r\n        .addCase(addProduct.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n        })\r\n\r\n        // PUT\r\n        builder.addCase(updateProduct.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(updateProduct.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"update products successfully\"\r\n        })\r\n        .addCase(updateProduct.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n        })\r\n\r\n\r\n        // GET\r\n        builder.addCase(getProducts.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(getProducts.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"Get all products successfully\"\r\n            state.products = action.payload\r\n        })\r\n        .addCase(getProducts.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n            state.products = null\r\n        })\r\n\r\n        builder.addCase(getSingleProduct.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(getSingleProduct.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"Get product successfully\"\r\n            state.getproduct = action.payload\r\n        })\r\n        .addCase(getSingleProduct.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n            state.getproduct = null\r\n        })\r\n\r\n\r\n        // DELETE\r\n        builder.addCase(deleteProducts.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(deleteProducts.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"delete products successfully\"\r\n        })\r\n        .addCase(deleteProducts.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n        })\r\n        \r\n        .addCase(resetState, () => initialState);\r\n    }\r\n})\r\n\r\nexport default productSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,QAAO,kBAAkB;AAC7E,OAAOC,aAAa,MAAM,iBAAiB;;AAG3C;AACA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,qBAAqB,EAAC,OAAMI,IAAI,EAACC,QAAQ,KAAG;EACnF,IAAI;IACA,OAAO,MAAMH,aAAa,CAACI,WAAW,CAACF,IAAI,CAAC;EAChD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EAC1C;AACJ,CAAC,CAAC;;AAGF;AACA,OAAO,MAAME,aAAa,GAAGT,gBAAgB,CAAC,wBAAwB,EAAC,OAAMI,IAAI,EAACC,QAAQ,KAAG;EACzF,IAAI;IACA,OAAO,MAAMH,aAAa,CAACO,aAAa,CAACL,IAAI,CAAC;EAClD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EAC1C;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,WAAW,GAAGV,gBAAgB,CAAC,yBAAyB,EAAC,MAAMK,QAAQ,IAAG;EACnF,IAAI;IACA,OAAO,MAAMH,aAAa,CAACQ,WAAW,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZ,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EAC1C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,gBAAgB,GAAGX,gBAAgB,CAAC,qBAAqB,EAAC,OAAMY,EAAE,EAACP,QAAQ,KAAG;EACvF,IAAI;IACA,OAAO,MAAMH,aAAa,CAACS,gBAAgB,CAACC,EAAE,CAAC;EACnD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EAC1C;AACJ,CAAC,CAAC;;AAGF;AACA,OAAO,MAAMM,cAAc,GAAGb,gBAAgB,CAAC,wBAAwB,EAAC,OAAMY,EAAE,EAACP,QAAQ,KAAG;EACxF,IAAI;IACA,OAAO,MAAMH,aAAa,CAACY,aAAa,CAACF,EAAE,CAAC;EAChD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EAC1C;AACJ,CAAC,CAAC;AAGF,OAAO,MAAMQ,UAAU,GAAGd,YAAY,CAAC,WAAW,CAAC;AAGnD,MAAMe,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAC,CAAC,CAAC;EACbC,OAAO,EAAG,KAAK;EACfC,SAAS,EAAC,KAAK;EACfC,SAAS,EAAC,KAAK;EACfC,OAAO,EAAC;AACZ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGxB,WAAW,CAAC;EACpCyB,IAAI,EAAG,SAAS;EAChBR,YAAY;EACZS,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAEC,OAAO,IAAI;IACtB;IACAA,OAAO,CAACC,OAAO,CAACzB,UAAU,CAAC0B,OAAO,EAAEC,KAAK,IAAG;MACxCA,KAAK,CAACV,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAACzB,UAAU,CAAC4B,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAC1CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,KAAK;MACrBW,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACR,OAAO,GAAG,2BAA2B;IAC/C,CAAC,CAAC,CACDM,OAAO,CAACzB,UAAU,CAAC8B,QAAQ,EAAC,CAACH,KAAK,EAACE,MAAM,KAAG;MACzCF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,IAAI;MACpBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAGU,MAAM,CAACzB,KAAK;IAChC,CAAC,CAAC;;IAEF;IACAoB,OAAO,CAACC,OAAO,CAACnB,aAAa,CAACoB,OAAO,EAAEC,KAAK,IAAG;MAC3CA,KAAK,CAACV,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAACnB,aAAa,CAACsB,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAC7CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,KAAK;MACrBW,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACR,OAAO,GAAG,8BAA8B;IAClD,CAAC,CAAC,CACDM,OAAO,CAACnB,aAAa,CAACwB,QAAQ,EAAC,CAACH,KAAK,EAACE,MAAM,KAAG;MAC5CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,IAAI;MACpBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAGU,MAAM,CAACzB,KAAK;IAChC,CAAC,CAAC;;IAGF;IACAoB,OAAO,CAACC,OAAO,CAAClB,WAAW,CAACmB,OAAO,EAAEC,KAAK,IAAG;MACzCA,KAAK,CAACV,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAAClB,WAAW,CAACqB,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAC3CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,KAAK;MACrBW,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACR,OAAO,GAAG,+BAA+B;MAC/CQ,KAAK,CAACb,QAAQ,GAAGe,MAAM,CAACE,OAAO;IACnC,CAAC,CAAC,CACDN,OAAO,CAAClB,WAAW,CAACuB,QAAQ,EAAC,CAACH,KAAK,EAACE,MAAM,KAAG;MAC1CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,IAAI;MACpBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAGU,MAAM,CAACzB,KAAK;MAC5BuB,KAAK,CAACb,QAAQ,GAAG,IAAI;IACzB,CAAC,CAAC;IAEFU,OAAO,CAACC,OAAO,CAACjB,gBAAgB,CAACkB,OAAO,EAAEC,KAAK,IAAG;MAC9CA,KAAK,CAACV,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAACjB,gBAAgB,CAACoB,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAChDF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,KAAK;MACrBW,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACR,OAAO,GAAG,0BAA0B;MAC1CQ,KAAK,CAACZ,UAAU,GAAGc,MAAM,CAACE,OAAO;IACrC,CAAC,CAAC,CACDN,OAAO,CAACjB,gBAAgB,CAACsB,QAAQ,EAAC,CAACH,KAAK,EAACE,MAAM,KAAG;MAC/CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,IAAI;MACpBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAGU,MAAM,CAACzB,KAAK;MAC5BuB,KAAK,CAACZ,UAAU,GAAG,IAAI;IAC3B,CAAC,CAAC;;IAGF;IACAS,OAAO,CAACC,OAAO,CAACf,cAAc,CAACgB,OAAO,EAAEC,KAAK,IAAG;MAC5CA,KAAK,CAACV,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAACf,cAAc,CAACkB,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAC9CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,KAAK;MACrBW,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACR,OAAO,GAAG,8BAA8B;IAClD,CAAC,CAAC,CACDM,OAAO,CAACf,cAAc,CAACoB,QAAQ,EAAC,CAACH,KAAK,EAACE,MAAM,KAAG;MAC7CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,IAAI;MACpBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAGU,MAAM,CAACzB,KAAK;IAChC,CAAC,CAAC,CAEDqB,OAAO,CAACb,UAAU,EAAE,MAAMC,YAAY,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,eAAeO,YAAY,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}