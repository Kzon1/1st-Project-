{"ast":null,"code":"var _jsxFileName = \"E:\\\\1st-Project-\\\\client\\\\src\\\\components\\\\Paypal.jsx\",\n  _s = $RefreshSig$();\nimport { PayPalScriptProvider, PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { base_url } from \"../utils/base_url\";\nimport { config } from \"../utils/axiosconfig\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch } from \"react-redux\";\nimport { emptycart } from \"../redux/user/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  \"layout\": \"vertical\"\n};\nconst ButtonWrapper = ({\n  currency,\n  showSpinner,\n  amount,\n  payload\n}) => {\n  _s();\n  const d = useDispatch();\n  const navigate = useNavigate();\n  const [{\n    isPending,\n    options\n  }, dispatch] = usePayPalScriptReducer();\n  useEffect(() => {\n    dispatch({\n      type: \"resetOptions\",\n      value: {\n        ...options,\n        currency: currency\n      }\n    });\n  }, [currency, showSpinner]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showSpinner && isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: style,\n      disabled: false,\n      forceReRender: [style, currency, amount],\n      fundingSource: undefined,\n      createOrder: (data, actions) => actions.order.create({\n        purchase_units: [{\n          amount: {\n            currency_code: currency,\n            value: amount\n          }\n        }]\n      }),\n      onApprove: (data, actions) => {\n        actions.order.capture().then(async res => {\n          const orderUser = axios.post(`${base_url}user/cart/create-order`, payload, config);\n          if (res.status === \"COMPLETED\") {\n            toast.success(\"Payment Success !\");\n            d(emptycart());\n            navigate(\"/checkout-success\");\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ButtonWrapper, \"SRX9LWf1Q0vUtYSyfWvDJql46cg=\", false, function () {\n  return [useDispatch, useNavigate, usePayPalScriptReducer];\n});\n_c = ButtonWrapper;\nexport default function Paypal({\n  amount,\n  payload\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"750px\",\n      minHeight: \"200px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n      options: {\n        clientId: \"test\",\n        components: \"buttons\",\n        currency: \"USD\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n        payload: payload,\n        currency: 'USD',\n        amount: amount,\n        showSpinner: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Paypal;\nvar _c, _c2;\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"Paypal\");","map":{"version":3,"names":["PayPalScriptProvider","PayPalButtons","usePayPalScriptReducer","useEffect","axios","base_url","config","toast","useDispatch","emptycart","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","style","ButtonWrapper","currency","showSpinner","amount","payload","_s","d","navigate","isPending","options","dispatch","type","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","disabled","forceReRender","fundingSource","undefined","createOrder","data","actions","order","create","purchase_units","currency_code","onApprove","capture","then","res","orderUser","post","status","success","_c","Paypal","maxWidth","minHeight","clientId","components","_c2","$RefreshReg$"],"sources":["E:/1st-Project-/client/src/components/Paypal.jsx"],"sourcesContent":["import {\r\n    PayPalScriptProvider,\r\n    PayPalButtons,\r\n    usePayPalScriptReducer\r\n} from \"@paypal/react-paypal-js\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { base_url } from \"../utils/base_url\";\r\nimport { config } from \"../utils/axiosconfig\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { emptycart } from \"../redux/user/userSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst style = {\"layout\":\"vertical\"};\r\n\r\nconst ButtonWrapper = ({ currency,showSpinner,amount,payload}) => {\r\n    const d = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [{ isPending,options },dispatch] = usePayPalScriptReducer();\r\n    useEffect(()=>{\r\n        dispatch({\r\n            type:\"resetOptions\",\r\n            value:{\r\n                ...options,currency:currency\r\n            }\r\n        })\r\n    },[currency,showSpinner])\r\n    return (\r\n        <>\r\n            { (showSpinner && isPending) && <div className=\"spinner\" /> }\r\n            <PayPalButtons\r\n                style={style}\r\n                disabled={false}\r\n                forceReRender={[style,currency,amount]}\r\n                fundingSource={undefined}\r\n                createOrder={(data,actions)=> actions.order.create({\r\n                    purchase_units : [\r\n                        { amount : { currency_code : currency , value : amount }}\r\n                    ]\r\n                })\r\n            }\r\n                onApprove={(data,actions)=>{\r\n                    actions.order.capture().then(async(res)=>{\r\n                        const orderUser = axios.post(`${base_url}user/cart/create-order`,payload,config)\r\n                        if(res.status ===\"COMPLETED\"){\r\n                            toast.success(\"Payment Success !\")\r\n                            d(emptycart())\r\n                            navigate(\"/checkout-success\")\r\n\r\n                        }\r\n                    })\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Paypal({amount,payload}) {\r\n    return (\r\n        <div style={{ maxWidth: \"750px\", minHeight: \"200px\" }}>\r\n            <PayPalScriptProvider options={{ clientId: \"test\", components: \"buttons\", currency: \"USD\" }}>\r\n                <ButtonWrapper payload={payload} currency={'USD'} amount={amount} showSpinner={false} />\r\n            </PayPalScriptProvider>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}