{"ast":null,"code":"import { createSlice, createAsyncThunk, createAction } from '@reduxjs/toolkit';\nimport orderSevice from './orderSevice';\n\n// PUT \nexport const updateOrder = createAsyncThunk('order/update-update-order', async (data, thunkAPI) => {\n  try {\n    return await orderSevice.updateOder(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst initialState = {\n  orders: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const orderSlice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    // PUT\n    builder.addCase(updateOrder.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateOrder.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.message = \"update order successfully\";\n    }).addCase(updateOrder.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n  }\n});\nexport default orderSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","orderSevice","updateOrder","data","thunkAPI","updateOder","error","rejectWithValue","initialState","orders","isError","isLoading","isSuccess","message","orderSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","rejected","reducer"],"sources":["E:/1st-Project-/client/src/redux/order/orderSlice.js"],"sourcesContent":["import { createSlice ,createAsyncThunk, createAction} from '@reduxjs/toolkit'\r\nimport orderSevice from './orderSevice'\r\n\r\n\r\n\r\n\r\n\r\n// PUT \r\nexport const updateOrder = createAsyncThunk('order/update-update-order',async(data,thunkAPI)=>{\r\n    try {\r\n        return await orderSevice.updateOder(data)\r\n    } catch (error) {\r\n        return thunkAPI.rejectWithValue(error)\r\n    }\r\n})\r\n\r\n\r\nconst initialState = {\r\n    orders:[],\r\n    isError : false,\r\n    isLoading:false,\r\n    isSuccess:false,\r\n    message:\"\"\r\n}\r\n\r\n\r\nexport const orderSlice = createSlice({\r\n    name:\"order\",\r\n    initialState,\r\n    reducers:{},\r\n    extraReducers:(builder)=>{\r\n        // PUT\r\n        builder.addCase(updateOrder.pending,(state)=>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(updateOrder.fulfilled,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = true\r\n            state.message = \"update order successfully\"\r\n        })\r\n        .addCase(updateOrder.rejected,(state,action)=>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isSuccess = false\r\n            state.message = action.error\r\n        })\r\n    }\r\n})\r\nexport default orderSlice.reducer\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,QAAO,kBAAkB;AAC7E,OAAOC,WAAW,MAAM,eAAe;;AAMvC;AACA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAAC,2BAA2B,EAAC,OAAMI,IAAI,EAACC,QAAQ,KAAG;EAC1F,IAAI;IACA,OAAO,MAAMH,WAAW,CAACI,UAAU,CAACF,IAAI,CAAC;EAC7C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOF,QAAQ,CAACG,eAAe,CAACD,KAAK,CAAC;EAC1C;AACJ,CAAC,CAAC;AAGF,MAAME,YAAY,GAAG;EACjBC,MAAM,EAAC,EAAE;EACTC,OAAO,EAAG,KAAK;EACfC,SAAS,EAAC,KAAK;EACfC,SAAS,EAAC,KAAK;EACfC,OAAO,EAAC;AACZ,CAAC;AAGD,OAAO,MAAMC,UAAU,GAAGhB,WAAW,CAAC;EAClCiB,IAAI,EAAC,OAAO;EACZP,YAAY;EACZQ,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAEC,OAAO,IAAG;IACrB;IACAA,OAAO,CAACC,OAAO,CAACjB,WAAW,CAACkB,OAAO,EAAEC,KAAK,IAAG;MACzCA,KAAK,CAACV,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDQ,OAAO,CAACjB,WAAW,CAACoB,SAAS,EAAC,CAACD,KAAK,EAACE,MAAM,KAAG;MAC3CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,KAAK;MACrBW,KAAK,CAACT,SAAS,GAAG,IAAI;MACtBS,KAAK,CAACR,OAAO,GAAG,2BAA2B;IAC/C,CAAC,CAAC,CACDM,OAAO,CAACjB,WAAW,CAACsB,QAAQ,EAAC,CAACH,KAAK,EAACE,MAAM,KAAG;MAC1CF,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,OAAO,GAAG,IAAI;MACpBW,KAAK,CAACT,SAAS,GAAG,KAAK;MACvBS,KAAK,CAACR,OAAO,GAAGU,MAAM,CAACjB,KAAK;IAChC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AACF,eAAeQ,UAAU,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}